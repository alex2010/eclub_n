// Generated by CoffeeScript 1.7.1
var __slice = [].slice;

module.exports = function(lang) {
  this.lang = lang;
  this._i18n = require("../i18n/" + this.lang);
  this.cat = function(k) {
    return this._i['cat.' + k];
  };
  this.p = function() {
    var it, k, m, res, _i, _len;
    k = arguments[0], m = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    res = this._i[k];
    if (_.isString(res) && m.length) {
      if (res && res.indexOf('{') > -1) {
        for (_i = 0, _len = m.length; _i < _len; _i++) {
          it = m[_i];
          res = res.substring(0, res.indexOf('{')) + it + res.substring(res.indexOf('}') + 1);
        }
        if (_.isString(res)) {
          res = res.replace(new RegExp("{", "gm"), '').replace(new RegExp("}", "gm"), '');
        }
      }
    }
    return res;
  };
  this.m = function() {
    var k, m;
    k = arguments[0], m = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (m.length) {
      arguments[0] = 'm.' + k;
      return this.p.apply(this, arguments);
    } else {
      return this._i['m.' + k];
    }
  };
  this.e = function(k, p) {
    return this._i[k + '.' + p] || this._i(p);
  };
  this.c = function(p) {
    return this._i['c.' + p] || p;
  };
  this.n = function(p) {
    return this._i['nav.' + p] || this._i('c.' + p) || this._i(p) || p;
  };
  this.load = function(code) {
    this._i = _.extend(_.clone(this._i18n), require("../public/module/" + code + "/src/i18n/" + this.lang));
    return this;
  };
  return this;
};
