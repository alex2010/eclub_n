// Generated by CoffeeScript 1.9.1
_.extend(String.prototype, {
  trim: function() {
    return this.replace(/^\s+|\s+$/g, "");
  },
  capitalize: function() {
    return this.trim().substring(0, 1).toUpperCase() + this.trim().substring(1);
  },
  startsWith: function(pattern) {
    return this.lastIndexOf(pattern, 0) === 0;
  },
  endsWith: function(pattern) {
    var d;
    d = this.length - pattern.length;
    return d >= 0 && this.indexOf(pattern, d) === d;
  },
  isEmpty: function() {
    return this.length === 0 || this === " " || /^\s*$/.test(this);
  },
  replaceAll: function(s1, s2) {
    return this.replace(new RegExp(s1, "gm"), s2);
  },
  truncate: function(length, truncation) {
    length = length || 30;
    truncation = (Object.isUndefined(truncation) ? "..." : truncation);
    if (this.length > length) {
      return this.slice(0, length - truncation.length) + truncation;
    } else {
      return String(this);
    }
  },
  fileName: function() {
    return this.substr(this.lastIndexOf('/') + 1);
  }
});

_.extend(Date.prototype, {
  isSameDay: function(d) {
    return this.getFullYear() === d.getFullYear() && this.getMonth === d.getMonth && this.getDate() === d.getDate();
  },
  addDays: function(d) {
    var t;
    if (d) {
      t = this.getTime();
      t = t + (d * 86400000);
      this.setTime(t);
    }
    return this;
  },
  nextWeekDay: function(day) {
    return this.addDays((day + 7 - this.getDay()) % 7);
  },
  firstDayOfMonth: function() {
    return new Date(this.getFullYear(), this.getMonth(), 1);
  },
  lastDayOfMonth: function() {
    return new Date(this.getFullYear(), this.getMonth() + 1, 1).addDays(-1);
  },
  monday: function() {
    if (this.getDay() > 0) {
      return this.addDays(1 - this.getDay());
    } else {
      return this.addDays(1 - 7);
    }
  },
  sunday: function() {
    if (this.getDay() > 0) {
      return this.addDays(7 - this.getDay());
    } else {
      return this;
    }
  },
  nextMonth: function() {
    return new Date(this.getFullYear(), this.getMonth() + 1, 1);
  },
  lastMonth: function() {
    return new Date(this.getFullYear(), this.getMonth() - 1, 1);
  }
});

Date.parseLocal = function(time) {
  if (time.length > 19) {
    time = time.substring(0, 19);
  }
  return new Date((time || "").replace(/-/g, "/").replace(/[TZ]/g, " "));
};

Date.prototype.pattern = function (fmt) {
    var o = {
        "Y+": this.getFullYear(), //年
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours() % 12 == 0 ? 12 : this.getHours() % 12, //小时
        "H+": this.getHours(), //小时
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    var week = {
        "0": "\u65e5",
        "1": "\u4e00",
        "2": "\u4e8c",
        "3": "\u4e09",
        "4": "\u56db",
        "5": "\u4e94",
        "6": "\u516d"
    };
    if (/(y+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    }
    if (/(E+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? "\u661f\u671f" : "\u5468") : "") + week[this.getDay() + ""]);
    }
    for (var k in o) {
        if (new RegExp("(" + k + ")").test(fmt)) {
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        }
    }
    return fmt;
};
