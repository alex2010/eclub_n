// Generated by CoffeeScript 1.9.1
var args, async, dao;

async = require('async');

args = null;

process.argv.forEach(function(val, index, array) {
  return args = array;
});

app = {};
_ = require('underscore')
_db = 'main';
log = console.log;
oid = require('mongodb').ObjectID;
code = args[2]
;

require('./ext/string');

dao = new require('./model/dao')(_db, function() {
  var data, entity, k, ref, results, v;
  if (args.length > 2) {
    entity = args[3];
    return dao.remove(code, entity, {}, {}, function() {
      var a, b, i, it, k, len, list, ob, ref, ref1, v;
      list = [];
      ref = require("./public/module/" + code + "/data/" + entity);
      for (i = 0, len = ref.length; i < len; i++) {
        it = ref[i];
        ob = {};
        for (k in it) {
          v = it[k];
          if (v !== null && !(k === 'cid' || k === 'version')) {
            if (k.indexOf('_') > -1) {
              ref1 = k.split('_'), a = ref1[0], b = ref1[1];
              b = b.capitalize();
              k = [a, b].join('');
            }
            if (v.toString().indexOf('{') === 0) {
              v = JSON.parse(v);
            } else if (v.length === 19 && v.indexOf('20') === 0) {
              v = Date.parseLocal(v);
            }
            if (k === 'ref_file') {
              k = 'refFile';
            }
            ob[k] = v;
          }
        }
        list.push(ob);
      }
      return dao.save(code, args[3], list);
    });
  } else {
    data = require("./public/module/" + code + "/data");
    dao.save(_db, 'community:code', data.community);
    ref = data.data;
    results = [];
    for (k in ref) {
      v = ref[k];
      results.push(dao.save(code, k, v, function() {
        return log(code);
      }));
    }
    return results;
  }
});

_.delay(function() {
  return dao.close();
}, 5000);
