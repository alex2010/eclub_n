// Generated by CoffeeScript 1.7.1
var async, i18n, oid, pageOpt, tmplUtil, u;

u = require('../util');

oid = require('mongodb').ObjectID;

async = require('async');

tmplUtil = require('../tmplUtil');

i18n = require('../i18n/lang')('zh');

pageOpt = function(code) {
  var c;
  c = app._community[code];
  return {
    title: 'console',
    lang: 'zh',
    mode: app.env,
    c: c,
    app: 'main',
    f: tmplUtil,
    i: i18n.load(code),
    cstr: JSON.stringify(_.pick(c, 'code', 'url')),
    cssPath: function(name) {
      if (app.env) {
        return "/module/" + code + "/src/pc/" + name + ".css";
      } else {
        return "/lib/" + name + ".css";
      }
    },
    jsPath: function(name) {
      if (app.env) {
        return "/module/" + code + "/src/" + name + ".js";
      } else {
        return "/lib/" + name + ".js";
      }
    }
  };
};

module.exports = {
  page: function(req, rsp) {
    var code, opt, page, rc, script;
    code = req.params.code;
    page = req.params.page;
    opt = pageOpt(code);
    opt.index = page;
    script = app.pickScript(code);
    rc = function(opt) {
      return rsp.render(page, opt);
    };
    if (script[page]) {
      return script[page](opt, rc);
    } else {
      return rc(opt);
    }
  },
  entity: function(req, rsp) {
    var code, entity, opt, script;
    code = req.params.code;
    entity = req.params.entity;
    script = app.pickScript(code);
    opt = pageOpt(code);
    opt.index = entity;
    log('zxcvcxvzc');
    return dao.get(code, entity, {
      _id: req.params.id
    }, function(item) {
      var rc;
      log(item);
      if (!item) {
        log('5050');
        req.redirect('./404.html');
        return;
      }
      opt = _.extend(opt, item);
      rc = function(opt) {
        return rsp.render(entity, opt);
      };
      if (script[entity]) {
        return script[entity](opt, rc);
      } else {
        log('zxcvxcvxzcv');
        return rc(opt);
      }
    });
  }
};
