// Generated by CoffeeScript 1.9.3
var _, afterAuth, async, authController, checkType, deepExtend, errAuth;

_ = require('underscore');

async = require('async');

deepExtend = require('deep-extend');

checkType = function(k) {
  if (/\S+@\S+\.\S+/.test(k)) {
    return {
      email: k
    };
  } else if (/^(13[0-9]|15[0|1|2|3|6|7|8|9]|18[5|6|8|9])\d{8}$/.test(k)) {
    return {
      phone: k
    };
  } else {
    return {
      username: k
    };
  }
};

afterAuth = function(code, user, rsp) {
  return dao.find(code, 'membership', {
    uid: user._id
  }, {}, function(ms) {
    var it, opt;
    opt = {
      _id: {
        $in: (function() {
          var i, len, results;
          results = [];
          for (i = 0, len = ms.length; i < len; i++) {
            it = ms[i];
            results.push(it.rid);
          }
          return results;
        })()
      }
    };
    return dao.find(code, 'role', opt, {}, function(rs) {
      var i, len, r, role;
      user.roles = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = rs.length; i < len; i++) {
          r = rs[i];
          results.push({
            title: r.title,
            label: r.label
          });
        }
        return results;
      })();
      for (i = 0, len = rs.length; i < len; i++) {
        role = rs[i];
        deepExtend(user, role.res);
      }
      return rsp.send({
        user: user,
        msg: 'm.login_s'
      });
    });
  });
};

errAuth = function(rsp) {
  return rsp.status(350).send({
    msg: 'm.login_f'
  });
};

authController = {
  login: function(req, rsp) {
    var code, opt;
    code = req.c.code;
    opt = checkType(req.body.username);
    return dao.get(code, 'user', opt, function(user) {
      if (!user) {
        errAuth(rsp);
        return;
      }
      if (user.psd !== req.body.psd) {
        return errAuth(rsp);
      } else {
        delete user.password;
        return afterAuth(code, user, rsp);
      }
    });
  },
  logout: function(req, rsp) {
    return rsp.send({
      msg: 'm.logout_s'
    });
  },
  loginByWoid: function(req, rsp) {
    var code, filter;
    code = req.c.code;
    filter = {
      woid: req.body.woid
    };
    return dao.get(code, 'user', filter, function(user) {
      if (user) {
        return afterAuth(code, user, rsp);
      } else {
        return errAuth(rsp);
      }
    });
  },
  logoutByWoid: function(req, rsp) {
    return rsp.send({
      msg: 'm.logout_s'
    });
  }
};

module.exports = authController;
